version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: kiis-postgres
    environment:
      POSTGRES_DB: kiis_todo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - kiis-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kiis_todo"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: kiis-backend
    environment:
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: kiis_todo
      DB_USER: postgres
      DB_PASSWORD: password123
      PORT: 3001
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - kiis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kiis-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - kiis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  kiis-network:
    driver: bridge